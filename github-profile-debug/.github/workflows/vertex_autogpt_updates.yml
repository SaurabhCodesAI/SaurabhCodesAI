name: VertexAutoGPT Profile Updates

on:
  schedule:
    - cron: '0 */4 * * *'
  push:
    branches: [ main ]
    paths:
      - 'scripts/**'
      - '.github/workflows/vertex_autogpt_updates.yml'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  update-vertex-profile:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 1
      
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        cache: 'pip'
        
    - name: Install dependencies with error handling
      run: |
        set -e
        python3 -m pip install --upgrade pip setuptools wheel
        pip install --no-cache-dir svgwrite pillow
        echo "Dependencies installed successfully"
        
    - name: Verify environment
      run: |
        python3 --version
        pip list | grep -E "(svgwrite|pillow)"
        ls -la scripts/
        
    - name: Generate VertexAutoGPT graphics
      run: |
        set -e
        cd "${{ github.workspace }}"
        echo "Current directory: $(pwd)"
        echo "Files before generation:"
        ls -la *.svg 2>/dev/null || echo "No existing SVG files"
        
        echo "Python version and path:"
        python3 --version
        which python3
        
        echo "Script file check:"
        ls -la scripts/generate_svg.py
        
        echo "Running Python script:"
        python3 scripts/generate_svg.py
        
        echo "Files after generation:"
        ls -la *.svg
        
        # Validate SVG files
        for svg in header.svg analytics.svg; do
          if [ -f "$svg" ]; then
            size=$(stat -c%s "$svg" 2>/dev/null || wc -c < "$svg" 2>/dev/null || echo "0")
            if [ "$size" -gt 0 ]; then
              echo "‚úÖ $svg generated successfully (${size} bytes)"
              head -5 "$svg"  # Show first few lines of SVG for validation
            else
              echo "‚ùå $svg is empty"
              exit 1
            fi
          else
            echo "‚ùå $svg not found"
            exit 1
          fi
        done
        
    - name: Configure Git for VertexAutoGPT
      run: |
        git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
        git config --local user.name "VertexAutoGPT Agent"
        git config --local --get user.email
        git config --local --get user.name
        
    - name: Commit and push VertexAutoGPT updates
      run: |
        set -e
        
        echo "Git status before adding files:"
        git status --porcelain
        
        # Add files individually with verification
        for svg in header.svg analytics.svg; do
          if [ -f "$svg" ]; then
            git add "$svg"
            echo "Added $svg to staging"
          else
            echo "Warning: $svg not found, skipping"
          fi
        done
        
        echo "Git status after adding files:"
        git status --staged
        
        if git diff --staged --quiet; then
          echo "No changes to commit - VertexAutoGPT graphics are up to date"
          exit 0
        else
          echo "Changes detected, committing VertexAutoGPT updates..."
          git commit -m "ü§ñ VertexAutoGPT Status Update - $(date -u '+%Y-%m-%d %H:%M UTC')"
          echo "Commit created successfully"
          git push origin main || echo "Push failed"
        fi
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

name: Python Version Test

on:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  test-python-versions:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.11', '3.12']
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Test Python and Dependencies
      run: |
        echo "===== TESTING PYTHON ${{ matrix.python-version }} ====="
        python3 --version
        python3 -m pip --version
        
        echo "===== INSTALLING DEPENDENCIES ====="
        python3 -m pip install --upgrade pip
        pip install svgwrite pillow
        
        echo "===== TESTING IMPORTS ====="
        python3 -c "import svgwrite; print(f'svgwrite version: {svgwrite.__version__}')"
        python3 -c "import PIL; print(f'Pillow version: {PIL.__version__}')"
        python3 -c "import sys; print(f'Python executable: {sys.executable}')"
        
        echo "===== TESTING SVG CREATION ====="
        python3 -c "import svgwrite; dwg = svgwrite.Drawing('version_test_${{ matrix.python-version }}.svg', size=('300px', '200px')); dwg.add(dwg.text('Python ${{ matrix.python-version }} Test', insert=(50, 100), fill='black')); dwg.save(); print('✅ SVG created successfully')"
        
        echo "===== CHECKING RESULTS ====="
        ls -la *.svg
        
        echo "===== TESTING OUR SCRIPT ====="
        if [ -f "scripts/generate_svg.py" ]; then
          echo "Testing our actual script..."
          timeout 60 python3 scripts/generate_svg.py || echo "Script failed or timed out"
          echo "Files after script:"
          ls -la *.svg 2>/dev/null || echo "No SVG files generated"
        else
          echo "❌ scripts/generate_svg.py not found"
        fi
